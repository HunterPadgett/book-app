---
import Books from "../pages/books.astro";
---

<!-- input and button -->
<div class="container mx-auto flex items-center justify-center p-4">
 <input
  type="text"
  placeholder="Book title"
  class="input-bordered input-secondary input m-2 w-full max-w-xs text-lg"
 />
 <button class="btn-secondary btn m-2 max-w-xs text-lg" id="add-book-btn"
  >Add</button
 >
</div>

<!-- book container -->
<div
 class="container mx-auto grid grid-cols-1 gap-8 p-4 md:grid-cols-2"
 id="book-container"
>
 <!-- book  -->
</div>

<script>
 const books = [];

 function grabData() {
  const input = document.querySelector("input");
  const title = input.value;
  addBook(title);
  input.value = "";
 }

 async function addBook(title, dateAdded = null) {
  const bookSection = document.querySelector("#book-container");
  const bookNumber = document.querySelector(".book-number");
  const convertedTitle = title.split(" ").join("+").toLocaleLowerCase().trim();
  let coverUrl = ``;
  const month = new Date().getMonth() + 1;
  const day = new Date().getDate();
  const year = new Date().getFullYear();
  const newDate = `${month}/${day}/${year}`;
  // dateAdded will only exist if the book is being added from localstorage in the displayBooks function
  // otherwise give the book from the input a date of date.now basically
  const date = dateAdded ? dateAdded : newDate;

  try {
   // first fetch for book title
   const response = await fetch(
    `https://openlibrary.org/search.json?q=${convertedTitle}&limit=5`
   );
   const data = await response.json();
   const bookTitle = data.docs[0].title;
   const isbn = data.docs[0].isbn[0];
   const cover = data.docs[0].cover_i;
   //  console.log(data);

   //  second fetch for ISBN to get the cover just in case the intial fetch doesnt have a cover
   const isbnResponse = await fetch(
    `https://openlibrary.org/isbn/${isbn}.json`
   );
   const isbnData = await isbnResponse.json();
   //  console.log(isbnData);
   if (cover) {
    coverUrl = `https://covers.openlibrary.org/b/id/${cover}-M.jpg`;
   } else {
    coverUrl = `https://covers.openlibrary.org/b/id/${isbnData.covers[0]}-M.jpg`;
    // console.log(coverUrl);
   }

   const html = `
    <div
      class="card z-10 card-side mx-auto max-w-lg border-2 bg-primary-content border-base-content shadow-md shadow-neutral-600">
      <figure>
        <img class="max-w-xs" src="${coverUrl}" alt="${coverUrl}" />
      </figure>
      <div class="card-body p-4 text-center">
        <h2 class="card-title text-2xl mx-auto">${bookTitle}</h2>
        <p>Date added: ${date}</p>
      </div>
    </div>
   `;

   bookSection.insertAdjacentHTML("afterbegin", html);

   const book = {
    cover: coverUrl,
    title: bookTitle,
    date: dateAdded,
   };

   // add created book to books array and set that array in localstorage
   books.push(book);
   localStorage.setItem("myBooks", JSON.stringify(books));
   // get books array FROM localstorage and grab the length of the array to set the book count number
   const booksLc = JSON.parse(localStorage.getItem("myBooks"));
   bookNumber.textContent = booksLc.length;

   //  error handling
  } catch (error) {
   console.error(error);
  }
 }

 async function displayBooks() {
  if (localStorage.getItem("myBooks")) {
   const books = JSON.parse(localStorage.getItem("myBooks"));
   //  console.log(books);

   // Add an index property to each book object
   books.forEach((book, index) => {
    book.index = index;
   });

   // Sort the books by their index property so i can display them in the order they were push into the array
   const sortedBooks = books.sort((a, b) => a.index - b.index);
   console.log(sortedBooks);

   const bookPromises = sortedBooks.map((book) =>
    // call the addBook function with the book title AND date so that the original date the book was added doesnt get overridden in the addBook()
    addBook(book.title, book.date)
   );
   await Promise.all(bookPromises);
  }

  // Remove the event listener after the function has executed once so the books dont continously get added over and over and more than once on each load
  document.removeEventListener("DOMContentLoaded", displayBooks);
 }

 document.addEventListener("DOMContentLoaded", displayBooks);
 document.querySelector("#add-book-btn").addEventListener("click", grabData);
</script>
